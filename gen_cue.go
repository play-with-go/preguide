package main

// cueDef is the string quoted output of cue def for the current package. This
// constant exists as a workaround until the full intent and capability of
// cuelang.org/go/encoding/gocode/... is established.
const cueDef = "package preguide\n\n#Guide: {\n\tPresteps: [...#Prestep]\n\n\t// Delims are the delimiters used in the guide prose and steps\n\t// for environment variable substitution. A template substitution\n\t// of the environment variable ABC therefore looks like \"{{ .ABC }}\"\n\tDelims: *[\"{{\", \"}}\"] | [string, string]\n\n\t// Images are optional because a guide does not need to have\n\t// any steps. However, we can't make this conditional on len(Steps) because\n\t// of cuelang.org/issue/279. Hence we validate in code.\n\tImage?: string\n\n\tSteps: [string]: en: (#Command | #CommandFile | #Upload | #UploadFile) & {\n\t\tStepType: #StepType\n\t}\n\tDefs: [string]: _\n}\n\n#StepType: int\n\n#StepTypeCommand:     #StepType & 1\n#StepTypeCommandFile: #StepType & 2\n#StepTypeUpload:      #StepType & 3\n#StepTypeUploadFile:  #StepType & 4\n\n#Prestep: {\n\tPackage: string\n\tArgs: [...string]\n}\n\n#Command: {\n\tStepType: #StepTypeCommand\n\tSource:   string\n}\n\n#CommandFile: {\n\tStepType: #StepTypeCommandFile\n\tPath:     string\n}\n\n#Upload: {\n\tStepType: #StepTypeUpload\n\tTarget:   string\n\tSource:   string\n}\n\n#UploadFile: {\n\tStepType: #StepTypeUploadFile\n\tTarget:   string\n\tPath:     string\n}\n"
