# Test that we get the expected output when running with -parallel 2

# Intial run
preguide gen -parallel 2 -out _output
! stdout .+
! stderr .+
cmp _output/myguide1_go115_en.markdown myguide1/go115_en.markdown.golden
cmp _output/myguide2_go115_en.markdown myguide2/go115_en.markdown.golden
cmp myguide1/go115_en_log.txt myguide1/go115_en_log.txt.golden
cmp myguide2/go115_en_log.txt myguide2/go115_en_log.txt.golden

-- myguide1/en.markdown --
---
title: A test with all directives
---
# Step 1

{{ step "step1" }}

# Step 2

{{ step "step2" }}
-- myguide1/steps.cue --
package steps

import "github.com/play-with-go/preguide"

Scenarios: go115: preguide.#Scenario & {
	Description: "Go 1.15"
}

Terminals: term1: preguide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Steps: step1: preguide.#Command & {
	Source: """
echo "Hello, world! I am a #Command"
touch blah
! false
ls
"""
}

Steps: step2: preguide.#Upload & {
	Target:   "/scripts/somewhere.sh"
	Source: """
#!/usr/bin/env bash

echo "Hello, world! I am an #Upload"
"""
}

-- myguide2/en.markdown --
---
title: A test with all directives
---
# Step 1

{{ step "step1" }}

# Step 2

{{ step "step2" }}
-- myguide2/steps.cue --
package steps

import "github.com/play-with-go/preguide"

Scenarios: go115: preguide.#Scenario & {
	Description: "Go 1.15"
}

Terminals: term1: preguide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Steps: step1: preguide.#Command & {
	Source: """
echo "Hello, world! I am a #Command"
touch blah
! false
ls
"""
}

Steps: step2: preguide.#Upload & {
	Target:   "/scripts/somewhere.sh"
	Source: """
#!/usr/bin/env bash

echo "Hello, world! I am an #Upload"
"""
}

-- myguide1/go115_en.markdown.golden --
---
guide: myguide1
lang: en
title: A test with all directives
---
# Step 1

<pre data-command-src="ZWNobyAiSGVsbG8sIHdvcmxkISBJIGFtIGEgI0NvbW1hbmQiCnRvdWNoIGJsYWgKZmFsc2UKbHMK"><code class="language-.term1">$ echo &#34;Hello, world! I am a #Command&#34;
Hello, world! I am a #Command
$ touch blah
$ false
$ ls
blah
</code></pre>

# Step 2

<pre data-upload-path="L3NjcmlwdHM=" data-upload-src="c29tZXdoZXJlLnNo:IyEvdXNyL2Jpbi9lbnYgYmFzaAoKZWNobyAiSGVsbG8sIHdvcmxkISBJIGFtIGFuICNVcGxvYWQi" data-upload-term=".term1"><code class="language-sh">#!/usr/bin/env bash

echo &#34;Hello, world! I am an #Upload&#34;</code></pre>
<script>let pageGuide="myguide1"; let pageLanguage="en"; let pageScenario="go115";</script>
-- myguide1/go115_en_log.txt.golden --
$ echo "Hello, world! I am a #Command"
Hello, world! I am a #Command
$ touch blah
$ false
$ ls
blah
$ cat <<EOD > /scripts/somewhere.sh
#!/usr/bin/env bash

echo "Hello, world! I am an #Upload"
EOD
-- myguide2/go115_en.markdown.golden --
---
guide: myguide2
lang: en
title: A test with all directives
---
# Step 1

<pre data-command-src="ZWNobyAiSGVsbG8sIHdvcmxkISBJIGFtIGEgI0NvbW1hbmQiCnRvdWNoIGJsYWgKZmFsc2UKbHMK"><code class="language-.term1">$ echo &#34;Hello, world! I am a #Command&#34;
Hello, world! I am a #Command
$ touch blah
$ false
$ ls
blah
</code></pre>

# Step 2

<pre data-upload-path="L3NjcmlwdHM=" data-upload-src="c29tZXdoZXJlLnNo:IyEvdXNyL2Jpbi9lbnYgYmFzaAoKZWNobyAiSGVsbG8sIHdvcmxkISBJIGFtIGFuICNVcGxvYWQi" data-upload-term=".term1"><code class="language-sh">#!/usr/bin/env bash

echo &#34;Hello, world! I am an #Upload&#34;</code></pre>
<script>let pageGuide="myguide2"; let pageLanguage="en"; let pageScenario="go115";</script>
-- myguide2/go115_en_log.txt.golden --
$ echo "Hello, world! I am a #Command"
Hello, world! I am a #Command
$ touch blah
$ false
$ ls
blah
$ cat <<EOD > /scripts/somewhere.sh
#!/usr/bin/env bash

echo "Hello, world! I am an #Upload"
EOD
