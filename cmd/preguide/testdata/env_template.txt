# Test that substitution of {{.ENV}} templates in both prose and the steps works.
# Note the test for the substitution of prose will only happen in -raw mode.
# Note also that the use of {{.ENV}} templates in commands is for readability reasons.
# Because the environment passed to a script would allow $GREETING to expand.
# However it's far more obscure for the user to be reading a guide that says:
#
#    go list $PKG
#
# compared to:
#
#    go list example.com/blah
#
# which is the expanded version of:
#
#    go list {{.PKG}}

# Expand $WORK in conf.cue
envsubst conf.cue

# Run normally
preguide gen -config conf.cue -out _output
! stdout .+
! stderr .+
cmp _output/myguide_go115_en.markdown myguide/go115_en.markdown.golden
cmp myguide/go115_en_log.txt myguide/go115_en_log.txt.golden

# Run with -mode raw
preguide gen -mode raw -config conf.cue -out _output
cmp stdout myguide/raw.cue.golden
! stderr .+
cmp _output/myguide_go115_en.markdown myguide/go115_en.markdown.raw.golden
cmp myguide/go115_en_log.txt myguide/go115_en_log.txt.raw.golden

-- prestep.txt --
{
  "Vars": [
    "GREETING=Hello, world!"
  ]
}
-- conf.cue --
"github.com/blah": {
	Endpoint: "file://$WORK/prestep.txt"
}
-- myguide/en.markdown --
---
title: A test with all directives
---
# Step 1

{{ step "step1" }}
-- myguide/steps.cue --
package steps

import "github.com/play-with-go/preguide"

Presteps: [preguide.#Prestep & {
	Package: "github.com/blah"
}]

Scenarios: go115: preguide.#Scenario & {
	Description: "Go 1.15"
}

Terminals: term1: preguide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Steps: step1: preguide.#Command & {Source: """
echo -n "The answer is: {{.GREETING}}!"
"""}
-- myguide/go115_en.markdown.golden --
---
guide: myguide
lang: en
title: A test with all directives
---
# Step 1

<pre data-command-src="ZWNobyAtbiAiVGhlIGFuc3dlciBpczoge3suR1JFRVRJTkd9fSEiCg=="><code class="language-.term1">$ echo -n &#34;The answer is: &#123;&#123;.GREETING&#125;&#125;!&#34;
The answer is: &#123;&#123;.GREETING&#125;&#125;!
</code></pre>
<script>let pageGuide="myguide"; let pageLanguage="en"; let pageScenario="go115";</script>
-- myguide/go115_en_log.txt.golden --
$ echo -n "The answer is: {{.GREETING}}!"
The answer is: {{.GREETING}}!
-- myguide/raw.cue.golden --
package out

Presteps: [{
	Package: "github.com/blah"
	Path:    "/"
	Version: "file"
	Variables: ["GREETING"]
}]
Terminals: [{
	Name:        "term1"
	Description: "The main terminal"
	Scenarios: {
		go115: {
			Image: "this_will_never_be_used"
		}
	}
}]
Scenarios: [{
	Name:        "go115"
	Description: "Go 1.15"
}]
Networks: []
Env: []
FilenameComment: false
Steps: {
	step1: {
		StepType:          1
		DoNotTrim:         false
		InformationOnly:   false
		Name:              "step1"
		Order:             0
		Terminal:          "term1"
		UnstableLineOrder: false
		Stmts: [{
			Negated:          false
			CmdStr:           "echo -n \"The answer is: {{.GREETING}}!\""
			ExitCode:         0
			Output:           "The answer is: Hello, world!!"
			ComparisonOutput: "The answer is: Hello, world!!"
		}]
	}
}
Hash: "e419ad5f6c5f02aa9c78658abb5b4ef480ebc0783a23072224c9c38d8c4ff830"
Delims: ["{{", "}}"]
-- myguide/go115_en.markdown.raw.golden --
# Step 1

$ echo -n &#34;The answer is: &#123;&#123;.GREETING&#125;&#125;!&#34;
The answer is: Hello, world!!
</code></pre>
-- myguide/go115_en_log.txt.raw.golden --
$ echo -n "The answer is: {{.GREETING}}!"
The answer is: Hello, world!!
