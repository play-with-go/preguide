# Test that we get the expected output when a step involves
# output that should sanitised

preguide gen -out _output
! stdout .+
! stderr .+
cmp _output/myguide.markdown myguide/en.markdown.golden
cmp myguide/en_log.txt myguide/en_log.txt.golden

-- myguide/en.markdown --
---
title: A test with output that should be sanitised
---
# Create go file

<!--step: step1 -->

# Create test file

<!--step: step2 -->

# Test

<!--step: step3 -->
-- myguide/steps.cue --
package steps

import "github.com/play-with-go/preguide"

Scenarios: go115: preguide.#Scenario & {
	Description: "Go 1.15"
}

Terminals: term1: preguide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Steps: step1: en: preguide.#Upload & { Target: "/home/gopher/hello.go", Source: """
package main

import "fmt"

func main() {
	fmt.Println("Hello, world!")
}
""" }

Steps: step2: en: preguide.#Upload & { Target: "/home/gopher/hello_test.go", Source: """
package main

import (
	"fmt"
	"testing"
)

func TestHello(t *testing.T) {
	fmt.Println("Hello, world... from the test!")
}
""" }

Steps: step3: en: preguide.#Command & { Source: """
go test
"""}

-- myguide/en.markdown.golden --
---
guide: myguide
lang: en
title: A test with output that should be sanitised
---
# Create go file

```go
package main

import "fmt"

func main() {
	fmt.Println("Hello, world!")
}
```
{:data-upload-path="L2hvbWUvZ29waGVy" data-upload-src="aGVsbG8uZ28=:cGFja2FnZSBtYWluCgppbXBvcnQgImZtdCIKCmZ1bmMgbWFpbigpIHsKCWZtdC5QcmludGxuKCJIZWxsbywgd29ybGQhIikKfQ==" data-upload-term=".term1"}

# Create test file

```go
package main

import (
	"fmt"
	"testing"
)

func TestHello(t *testing.T) {
	fmt.Println("Hello, world... from the test!")
}
```
{:data-upload-path="L2hvbWUvZ29waGVy" data-upload-src="aGVsbG9fdGVzdC5nbw==:cGFja2FnZSBtYWluCgppbXBvcnQgKAoJImZtdCIKCSJ0ZXN0aW5nIgopCgpmdW5jIFRlc3RIZWxsbyh0ICp0ZXN0aW5nLlQpIHsKCWZtdC5QcmludGxuKCJIZWxsbywgd29ybGQuLi4gZnJvbSB0aGUgdGVzdCEiKQp9" data-upload-term=".term1"}

# Test

```.term1
$ go test
Hello, world... from the test!
PASS
ok  	_/home/gopher	0.042s
```
{:data-command-src="Z28gdGVzdAo="}
<script>let pageGuide="myguide"; let pageLanguage="en"; let pageScenario="go115";</script>
-- myguide/en_log.txt.golden --
Terminals: [
  {
    "Name": "term1",
    "Description": "The main terminal",
    "Scenarios": {
      "go115": {
        "Image": "this_will_never_be_used"
      }
    }
  }
]
$ cat <<EOD > /home/gopher/hello.go
package main

import "fmt"

func main() {
	fmt.Println("Hello, world!")
}
EOD
$ cat <<EOD > /home/gopher/hello_test.go
package main

import (
	"fmt"
	"testing"
)

func TestHello(t *testing.T) {
	fmt.Println("Hello, world... from the test!")
}
EOD
$ go test
Hello, world... from the test!
PASS
ok  	_/home/gopher	0.042s
