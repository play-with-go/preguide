# Test that basic outrefs work

preguide gen -out _output
! stdout .+
! stderr .+
cmp _output/myguide_go115_en.md myguide/go115_en.md.golden

-- myguide/en.md --
---
title: A test with myguide
---
# Hello <!--ref: world-->

Here is a `<!--ref: world-->` code example.

And a fence block:

```
<!--ref: world-->
```

Here are some commands:

<!--step: step1 -->

Here we talk about the second of those commands, `<!--outref: cmd_false -->`.

We also present the output of `<!--outref: echo_out-->`.

-- myguide/guide.cue --
package guide

import "github.com/play-with-go/preguide"

Scenarios: go115: preguide.#Scenario & {
	Description: "Go 1.15"
}

Terminals: term1: preguide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Defs: world: "world"

Steps: step1: preguide.#Command & { Source: """
echo "Hello, world!"
touch blah
! false
ls
"""}
-- myguide/out/myguide.cue --
package out

Defs: {
	echo_out:         Steps.step1.Stmts[0].Output
	cmd_false:        Steps.step1.Stmts[2].CmdStr
}
-- myguide/go115_en.md.golden --
---
guide: myguide
lang: en
title: A test with myguide
---
# Hello world

Here is a `world` code example.

And a fence block:

```
world
```

Here are some commands:

```.term1
$ echo "Hello, world!"
Hello, world!
$ touch blah
$ false
$ ls
blah
```
{:data-command-src="ZWNobyAiSGVsbG8sIHdvcmxkISIKdG91Y2ggYmxhaApmYWxzZQpscwo="}

Here we talk about the second of those commands, `false`.

We also present the output of `Hello, world!
`.

<script>let pageGuide="myguide"; let pageLanguage="en"; let pageScenario="go115";</script>
