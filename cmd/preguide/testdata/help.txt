# Test that basic command help works

env PREGUIDE_IMAGE_OVERRIDE=
env PREGUIDE_PULL_IMAGE=
env PREGUIDE_DOCKER=

# Explicit help flag
! preguide -help
cmp stderr help.txt

# Missing command
! preguide
cmp stderr missing_command.txt

# Command help
preguide help gen
cmp stdout gen_command_help.txt

-- help.txt --
Usage of preguide:

    preguide <command>

The commands are:

    docker
    gen
    init

Use "preguide help <command>" for more information about a command.

preguide defines the following flags:

	  -debug
	        print debug output to os.Stderr
-- missing_command.txt --
missing command
Usage of preguide:

    preguide <command>

The commands are:

    docker
    gen
    init

Use "preguide help <command>" for more information about a command.

preguide defines the following flags:

	  -debug
	        print debug output to os.Stderr
-- gen_command_help.txt --
usage: preguide gen

	  -compat
	        render old-style PWD code blocks
	  -config value
	        CUE-style configuration input; can appear multiple times. See 'cue help inputs'
	  -debugcache
	        write a human-readable time-stamp-named file of the guide cache check to the current directory
	  -dir string
	        the directory within which to run preguide
	  -docker
	        internal flag: run prestep requests in a docker container
	  -image string
	        the image to use instead of the guide-specified image
	  -mode value
	        the output mode. Valid values are: jekyll, github (default jekyll)
	  -out string
	        the target directory for generation. If no value is specified it defaults to the input directory
	  -package string
	        the CUE package name to use for the generated guide structure file
	  -parallel int
	        allow parallel execution of preguide scripts. The value of this flag is the maximum number of scripts to run simultaneously. By default it is set to the value of GOMAXPROCS
	  -pull string
	        try and docker pull image if missing
	  -raw
	        generate raw output for steps
	  -run string
	        regexp that describes which guides within dir to validate and run (default ".")
	  -runargs value
	        additional arguments to pass to the script that runs for a terminal. Format -run=$terminalName=args...; can appear multiple times
	  -skipcache
	        whether to skip any output cache checking
