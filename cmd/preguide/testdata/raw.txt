# Test that we get the expected output when using -raw

# A run should generate stdout but no out/gen_out.cue file
preguide gen -raw -out _output
cmp stdout raw/stdout
! stderr .+
! exists raw/out/gen_out.cue

-- raw/en.markdown --
---
title: A test with raw output
---

<!--step: step1 -->
-- raw/steps.cue --
package steps

import "github.com/play-with-go/preguide"

// We embed preguide.#Guide here as a check that doing so
// means we can correctly validate, decode etc the package
// (because if you try to extract position information from
// the cue.Value that is the package in this case it will
// fail, because of the unification with preguide.#Guide)
preguide.#Guide

Env: ["A=B"]

Terminals: term1: preguide.#Guide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Scenarios: go115: {
	Description: "Go 1.15"
}

Steps: step1: en: preguide.#Command & {Source: """
echo -n "Hello, world!"
"""}
-- raw/stdout --
package out

{
	Scenarios: [{
		Name:        "go115"
		Description: "Go 1.15"
	}]
	Networks: []
	Env: ["A=B"]
	Terminals: [{
		Name:        "term1"
		Description: "The main terminal"
		Scenarios: {
			go115: {
				Image: "this_will_never_be_used"
			}
		}
	}]
	Langs: {
		en: {
			Steps: {
				step1: {
					Name:     "step1"
					StepType: 1
					Terminal: "term1"
					Order:    0
					Stmts: [{
						Negated:  false
						CmdStr:   "echo -n \"Hello, world!\""
						ExitCode: 0
						Output:   "Hello, world!"
					}]
				}
			}
			Hash: "d4efc23981d2701822054ce5f1b9498fe7498d32034ba12958413d7c29287cb2"
		}
	}
}
