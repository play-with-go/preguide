# Test that we get the expected behaviour when using the diff renderer

# Intial run
preguide gen -out _output
! stdout .+
! stderr .+
cmp _output/myguide_go115_en.markdown myguide/go115_en.markdown.golden
cmp myguide/out/gen_out.cue myguide/out/gen_out.cue.golden

-- myguide/en.markdown --
---
title: A test with all directives
---
# Step 1

{{ step "step0" }}

{{ step "step1" }}

{{ step "step2" }}

-- myguide/steps.cue --
package steps

import "github.com/play-with-go/preguide"

Scenarios: go115: preguide.#Scenario & {
	Description: "Go 1.15"
}

Terminals: term1: preguide.#Terminal & {
	Description: "The main terminal"
	Scenarios: go115: Image: "this_will_never_be_used"
}

Steps: step0: preguide.#Command & {
	Stmts: """
echo -n "Hello"
"""
}

Steps: step1: preguide.#Upload & {
	Target:   "/home/gopher/somewhere.md"
	Source: """
This is some markdown `with code`

"""
}

Steps: step2: preguide.#Upload & {
	Target:   "/home/gopher/somewhere.md"
	Renderer: preguide.#RenderDiff & {
		Pre: Steps.step1.Source
	}
	Source: """
This is some markdown `with code`
Another line
A third line
<nil>

"""
}

-- myguide/go115_en.markdown.golden --
---
guide: myguide
lang: en
title: A test with all directives
---
# Step 1

<pre data-command-src="ZWNobyAtbiAiSGVsbG8iCg=="><code class="language-.term1">$ echo -n &#34;Hello&#34;
Hello
</code></pre>

<pre data-upload-path="L2hvbWUvZ29waGVy" data-upload-src="c29tZXdoZXJlLm1k:VGhpcyBpcyBzb21lIG1hcmtkb3duIGB3aXRoIGNvZGVgCg==" data-upload-term=".term1"><code class="language-md">This is some markdown `with code`
</code></pre>

<pre data-upload-path="L2hvbWUvZ29waGVy" data-upload-src="c29tZXdoZXJlLm1k:VGhpcyBpcyBzb21lIG1hcmtkb3duIGB3aXRoIGNvZGVgCkFub3RoZXIgbGluZQpBIHRoaXJkIGxpbmUKPG5pbD4K" data-upload-term=".term1"><code class="language-md">This is some markdown `with code`
<b>Another line</b>
<b>A third line</b>
<b>&lt;nil&gt;</b>
</code></pre>

<script>let pageGuide="myguide"; let pageLanguage="en"; let pageScenario="go115";</script>
-- myguide/out/gen_out.cue.golden --
package out

Terminals: [{
	Name:        "term1"
	Description: "The main terminal"
	Scenarios: {
		go115: {
			Image: "this_will_never_be_used"
		}
	}
}]
Scenarios: [{
	Name:        "go115"
	Description: "Go 1.15"
}]
Networks: []
Env: []
Steps: {
	step0: {
		StepType: 1
		Name:     "step0"
		Order:    0
		Terminal: "term1"
		Stmts: [{
			CmdStr:   "echo -n \"Hello\""
			ExitCode: 0
			Output:   "Hello"
		}]
	}
	step1: {
		StepType: 2
		Name:     "step1"
		Order:    1
		Terminal: "term1"
		Language: "md"
		Renderer: {
			RendererType: 1
		}
		Source: """
			This is some markdown `with code`

			"""
		Target: "/home/gopher/somewhere.md"
	}
	step2: {
		StepType: 2
		Name:     "step2"
		Order:    2
		Terminal: "term1"
		Language: "md"
		Renderer: {
			RendererType: 3
			Pre: """
				This is some markdown `with code`

				"""
		}
		Source: """
			This is some markdown `with code`
			Another line
			A third line
			<nil>

			"""
		Target: "/home/gopher/somewhere.md"
	}
}
Hash: "2841b23ef64f8d9cf3fd9f71066788dd07bcb2bec56c6c609070023b33c455fd"
Delims: ["{{", "}}"]
